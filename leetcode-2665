/***** 2265. Count Nodes Equal to Average of Subtree Solution  ******/

Problem Statement:
Given the root of a binary tree, return the number of nodes where the value of the node is equal to the average of the values in its subtree.

Note:

The average of n elements is the sum of the n elements divided by n and rounded down to the nearest integer.
A subtree of root is a tree consisting of root and all of its descendants.



/******* My Solution in c++*********/

class Solution {
public:
    pair<int,int> fun(TreeNode* root, int& cnt)
    {
        if(root == NULL)
        {
            return {0,0};
        }
        auto lft = fun(root->left,cnt);    /** lft = {a,b} ***/ 
        auto rit = fun(root->right,cnt);   /** lft = {a,b} ***/ 
        int sum = lft.first + rit.first + root->val;
        int ele = lft.second + rit.second + 1;
        if(sum/ele == root->val)
        {
            cnt++;
        }
        return {sum, ele};
    }
    int averageOfSubtree(TreeNode* root) {
        int cnt = 0;
        fun(root,cnt);
        return cnt;
    }
};

